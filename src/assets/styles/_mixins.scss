@function boxShadow($type: default, $variant: black) {
    // colors goes here
    $black: var(--black);
    $white: var(--white);
    $black-trans: var(--black-trans);
    $white-trans: var(--white-trans);
    $success: var(--success);
    $info: var(--info);
    $warning: var(--warning);
    $danger: var(--danger);
    $primary: var(--primary);
    $secondary: var(--secondary);
    $menu: var(--menu-color);

    // shadow values goes here
    $top-shadow: var(--top-shadow);
    $bottom-shadow: var(--bottom-shadow);
    $default-shadow: var(--default-shadow);
    $minimal-shadow: var(--minimal-shadow);
    $dark-shadow: var(--dark-shadow);
    $svg-light-shadow: var(--svg-light-shadow);
    $svg-dark-shadow: var(--svg-dark-shadow);
    $focus-shadow: var(--focus-shadow);
    $menu-shadow: var(--menu-shadow);
    $notify-shadow: var(--notify-shadow);
    $card-shadow: var(--card-shadow);
    $card-hover-shadow: var(--card-hover-shadow);
    $text-shadow: var(--text-shadow);


    @if $type ==menu {
        @return $menu-shadow $black;
    }

    @else if $type ==notify {
        @return $notify-shadow $black;
    }

    @else if $type ==svg-light {
        @return $svg-light-shadow $black-trans;
    }

    @else if $type ==svg-dark {
        @return $svg-dark-shadow $black-trans;
    }

    @else if $type ==focus {
        @return $focus-shadow $black;
    }

    @else if $type ==light {
        @return $default-shadow $white-trans;
    }

    @else if $type ==dark {
        @return $dark-shadow $black-trans;
    }

    @else if $type ==minimal {
        @return $minimal-shadow $black-trans;
    }

    @else if $type ==focus and $variant ==primary {
        @return $focus-shadow $primary;
    }

    @else if $type ==focus and $variant ==secondary {
        @return $focus-shadow $secondary;
    }

    @else if $type ==focus and $variant ==success {
        @return $focus-shadow $success;
    }

    @else if $type ==focus and $variant ==info {
        @return $focus-shadow $info;
    }

    @else if $type ==focus and $variant ==warning {
        @return $focus-shadow $warning;
    }

    @else if $type ==focus and $variant ==danger {
        @return $focus-shadow $danger;
    }

    @else if $type ==top {
        @return $top-shadow $black-trans;
    }

    @else if $type ==bottom {
        @return $bottom-shadow $black-trans;
    }

    @else if $type ==card {
        @return $card-shadow $black;
    }

    @else if $type ==card-hover {
        @return $card-hover-shadow $black;
    }

    @else if $type ==text {
        @return $text-shadow $black;
    }

    @else {
        @return $default-shadow $black-trans;
    }
}

@function px2rem($size) {
    $rem-px: 16;
    $rem-size: calc($size / $rem-px);
    @return #{$rem-size}rem;
}

@mixin headerFooters {
    width: auto;
    color: var(--white);
    padding: 1%;
    box-shadow: boxShadow(minimal);
}

@mixin headings($size) {
    margin-bottom: 0.5rem;
    font-weight: 500;
    line-height: 1.2;
    font-size: $size;
}

@mixin AmountType {
    color: var(--white);
    padding: px2rem(3) px2rem(6);
    border-radius: var(--radius-default);
    margin: auto;
    line-height: 1;
    min-width: px2rem(200);
}

@mixin formControl {
    height: px2rem(40);
    font-size: 1rem;
    font-weight: 400;
    line-height: 1.5;
    color: #495057;
    background-color: var(--light);
    background-clip: padding-box;
    border-radius: var(--radius-default);
    transition: border-color 0.15s ease-in-out;
    box-shadow: boxShadow();
}

@mixin cssArrow($dir) {
    $rotateBy: 0deg;

    @if $dir ==right {
        $rotateBy: -45deg
    }

    @if $dir ==left {
        $rotateBy: 135deg
    }

    @if $dir ==up {
        $rotateBy: -135deg
    }

    @if $dir ==down {
        $rotateBy: 45deg
    }

    border: solid var(--black);
    border-width: 0 px2rem(3) px2rem(3) 0;
    display: inline-block;
    padding: px2rem(3);
    transform: rotate($rotateBy);
    -webkit-transform: rotate($rotateBy);
}

@mixin hideScroll {
    /* Hide scrollbar for IE, Edge and Firefox */
    -ms-overflow-style: none;
    /* for IE and Edge */
    scrollbar-width: none;
    /* for Firefox */
    overflow-y: scroll;

    /* Hide scrollbar for Chrome, Safari and Opera */
    &::-webkit-scrollbar {
        display: none;
    }
}

@mixin buttonVariant($variant: primary) {

    $background-color: '';
    $text-color: '';
    $hover-color: '';
    $disabled-color: '';
    $border-color: '';

    @if $variant ==light {
        $background-color: var(--light);
        $text-color: var(--dark);
        $hover-color: var(--light-hover);
        $disabled-color: var(--light-disabled);
        $border-color: var(--light-border);
    }

    @else if $variant ==dark {
        $background-color: var(--dark);
        $text-color: var(--light);
        $hover-color: var(--dark-hover);
        $disabled-color: var(--dark-disabled);
        $border-color: var(--dark-border);
    }

    @else if $variant ==primary {
        $background-color: var(--primary);
        $text-color: var(--white);
        $hover-color: var(--primary-hover);
        $disabled-color: var(--primary-disabled);
        $border-color: var(--primary-border);
    }

    @else if $variant ==secondary {
        $background-color: var(--secondary);
        $text-color: var(--white);
        $hover-color: var(--secondary-hover);
        $disabled-color: var(--secondary-disabled);
        $border-color: var(--secondary-border);
    }

    @else if $variant ==success {
        $background-color: var(--success);
        $text-color: var(--white);
        $hover-color: var(--success-hover);
        $disabled-color: var(--success-disabled);
        $border-color: var(--success-border);
    }

    @else if $variant ==info {
        $background-color: var(--info);
        $text-color: var(--white);
        $hover-color: var(--info-hover);
        $disabled-color: var(--info-disabled);
        $border-color: var(--info-border);
    }

    @else if $variant ==warning {
        $background-color: var(--warning);
        $text-color: var(--white);
        $hover-color: var(--warning-hover);
        $disabled-color: var(--warning-disabled);
        $border-color: var(--warning-border);
    }

    @else if $variant ==danger {
        $background-color: var(--danger);
        $text-color: var(--white);
        $hover-color: var(--danger-hover);
        $disabled-color: var(--danger-disabled);
        $border-color: var(--danger-border);
    }

    color: $text-color;
    background-color: $background-color;
    border-color: $border-color;

    &:hover {
        color: $text-color;
        background-color: $hover-color;
        border-color: $border-color;
    }

    &:focus {
        box-shadow: boxShadow(focus, $variant);
    }

    &:disabled {
        color: $text-color;
        background-color: $disabled-color;
        border-color: $border-color;
    }
}

@mixin hoverTransform($scale: 1.5) {
    &:hover {

        &>.svg-holder svg,
        &>svg {
            transition: 0.5s;
            transform: scale($scale);
        }
    }
}

@mixin pickerGrid($repeat, $frames) {
    width: 100%;
    display: grid;
    grid-template-columns: repeat($repeat, $frames);
    padding: 0.2rem;

    div {
        display: flex;
        justify-content: center;
        align-items: center;
        font-size: 1rem;
        font-weight: 400;
        letter-spacing: 0.1rem;
        text-shadow: boxShadow(text);
        transition: background-color 0.2s;
        margin: px2rem(1);
        padding: px2rem(5) 0;
    }
}